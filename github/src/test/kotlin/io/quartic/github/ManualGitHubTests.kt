package io.quartic.github

import io.quartic.common.application.DEV_MASTER_KEY_BASE64
import io.quartic.common.client.ClientBuilder
import io.quartic.common.secrets.EncryptedSecret
import io.quartic.common.secrets.SecretsCodec
import org.junit.Ignore
import org.junit.Test
import java.net.URI

@Ignore
class ManualGitHubTests {
    private val client = GitHubInstallationClient(
        appId = "4352",
        githubApiRoot = URI("https://api.github.com"),
        key = SecretsCodec(DEV_MASTER_KEY_BASE64).decrypt(EncryptedSecret("1\$be8fd96dd3ee7dcc9957ab1b\$11e8f0af1008e7806843799fafdf306a97008a9b3175c6336a20b03c75033d6e154d60c34e2dc6480c5f498fbfc57e9d01bdbb6966dfeabf1970d5f3de5c221827a830b48ed8d1c9227447f7947e6361b512c0d816a17d44de2d383d770040e92ffc746a67703ae7b06ac4a0afea9dbfc01cce99c94ac0a3fb5371514cbf07b72a9e5ac9975610870995dd98e93d391ab17f9257f292ea8cc51b88f1d3565d2968745cb7c806af5c672001bb44c12b3e744725d136d71e7a8853dfc58d225e11faf8b040ec977b63e7b391ff7a6f90d21692ed2bed288c892110b0b98ff465b2468e96aabc8f5f71de9acdc254907cec52b80b39ab738f9a0f82bf01d09c0c6ecaf0af2941c50d94f0149e1da86b911c297fd4ae19391ef815c25821ca853975acc28a4d9db30c7f3f40bd6850347eb930447323b166081e1ff4c0586ab1bece812e8a5923b10c055ae9daa5704fdc51efdac46b347379612796fc4256b9060fe5a57089c0542b37d31f69462c9e8a99cbe0c4aa900fc3a934ef01a7654c50d2722539fbbac10adbf8af779c281431e694477044a465d7bced239491b2990cd6fa1de563566f0e3dcfeebe056765e1ab701d6ae02896d18d5d10d35f9fff26c768451cc78e90713f1f2a180074731d96f3fa00b3274526cc56eea0b91af74652303dc1427abb367139799e1a1f5e45d8c7d6891f808b992bd4942f46366609896cf315ebee67d4ff2b6df31fd465f6dbb376f88c557e1fe66d627919b935b064eb4dfa451701622400b9a80d6e3cc5bab4405066e3d6e8181dfd6e86e44c80f68209d3594dce24812f4955e64e9d46ac8c204fca94b3dadf1010bb74d77458a1c4f9fa520ac807e18651677942ab6fe03c9603562514611d7dc850013ef5620382f7745b21c1b1d5e544982310779edb7861094e337af094124309f5a74b308fb51c91a94855a81bc9a34d4ba77cf48342640e6d5a5e21de1113038428bb127b91e582b418551f7f98089f46454123b33c5cc8a27066e4c158b71b0477941baa83dd26b237953903f10cde8862c546083d4a685f22670e87f1fa4fa016b854e76e47461bebb78a7cab92f18b285bc3b001ef3e6560d9501049f1fc209bf2efa23703d8a82b281d4139759b68f3e56ef141f69227705d6e4733335311a8a12b036abd10d863d01222b519e71ed36e1c38aa6daf8c5a74fb46b811496393ea1ea56eff1a1e5a3a2ae973909aea9423535cd8164fe04fa706f3cd95f8f40f28b0266c0c335a6d9d0025641fedbdaa1a373ed129b60932e11ddf5d8c5d25664988e77672a0b0c784894bf98f4dca09635dde279de5dfb6ea5e31c6cf9b4b204ad456acf62288b58937aad6a0dc4a271d02d1e11bee9114b16f152ee084992bb2543a02869edcb6fe8095c5171c15163f442a4e32e12309acb166fa8827272bded81db09ca618c4c15ca25a7952153dc389d146f55a1491ea4808524ea3ee7cc8f7d1d3ad1458cc6bf59787e94769ab5b37e1ea40d775c3bd9841917f3433f14f4cc9e93e230dc9925b23b3d24418ba855134a1e01d98941d8a2982b09493802a8bfc14d48d36616688b96452e60aaa643205698942654a314d49fc6432aec42cf53ce948e234ce511384b341eeb8697f82cde61395f9e51f635aa6b8496bea0ab01cd9d1476470875b5631d1ee8b880a2c1b68c711d27b736335bd7f346c4fdaa170d5cc56eff962a0fcfc214d73d10275cfc94c5fc16e430427862a9ca8faabaa9bc10dbfe0228d87eedf1b192b9e522df2063101770fcb6140b1079c30a539707ad3e0bc774d7018ac489160dca2acb80d2cfa07d12bf51081ae1f392e4bfd95ab51d3376ab474dc128074655a9d8ad6a28b03a3faf771b04daa6e458e41fc9f56c019a8dccf6088c1788b099186c1f1708f10433f306de973d9d932ed7650bc6a4b3693ae3552f8932971bb36cbc2233ea37ad0c0bb464030ebfcfac0dac0b1c9b952278dfc55175ba3af8be78349799e65cbb43a313231862e7b0325bcd72533e4a1b4290a6c392ad9bfc6f0d05b12f9556ec9312baaf2792bc758d8ce9f2ed99c09d3e8aabf6ca284f37fb66fd279e8e11b023db4a6805cb0aacb52e723bfc36c81b488e9cffb8e0680fe1f808e92f56ba1facffcd0d492495e38462a3e2c97e3c377a06e88f84716cdd7e532676d002a14ff79e4fc95259cc648eed6a391c258f2c62ef1f21620658826622754cb3cacf939c92ef70a11a8304769398cb7b6529056058af7b47622b42cdd64836639365d161568817a744f818b144fee72835834960ccc4704d35b72461b75bc7bf6637a\$8cdc933881fb272b2d47eb8020a73e6f")),
        clientBuilder = ClientBuilder(javaClass)
    )

    private val installationId: Long = 45267

    @Test
    fun with_retrofit() {
        println(client.accessTokenAsync(installationId).get())
    }

    @Test
    fun send_status_updates() {
         val accessToken = client.accessTokenAsync(45267).get()
         client.sendStatusAsync(
             "quartictech",
             "playground",
             "c98a7f98f6f05dd6ed5cf66aa9f07e10a78ba2c6",
             StatusCreate(
                 "success",
                 URI.create("https://playground.quartic.io"),
                 "success",
                 "quartic"
             ),
             accessToken
         ).join()
     }

    @Test
    fun fetch_repository() {
        val accessToken = client.accessTokenAsync(45267).get()
        val repo = client.getRepositoryAsync(78424428, accessToken).get()
        println(repo)
     }
}
