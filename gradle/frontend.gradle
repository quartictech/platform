apply plugin: "idea"

def env = [BUILD_VERSION: version]

node {
//    version = "8.1.2"
    yarnVersion = "0.27.0"
    download = "true"
}

yarn {
    // In a perfect world, we'd just put this in .yarnrc
    // However, see this: https://github.com/mapbox/mapbox-gl-js/issues/4885
    args =          ["--mutex", "network"]
}

task bundle(type: Exec) {
    inputs.files    yarn.outputs
    inputs.file     "${projectDir}/tsconfig.json"
    inputs.dir      "${projectDir}/config"
    inputs.dir      "${projectDir}/src"
    outputs.dir     "${buildDir}/webpack"

    commandLine     "${yarn.nodeModulesDir}/.bin/webpack",
                    "--config", "${projectDir}/config/webpack/prod.js",
                    "--env.node_modules_dir", yarn.nodeModulesDir,
                    "--progress", "--profile", "--colors"
}

task yarnStart(type: YarnTask, dependsOn: yarn) {
    inputs.files    yarn.outputs
    inputs.file     "${projectDir}/package.json"    // In case the NPM start script changed
    inputs.file     "${projectDir}/tsconfig.json"
    inputs.dir      "${projectDir}/config"
    inputs.dir      "${projectDir}/src"
    // No outputs because this should always run

    args =          ["start", "--silent"]
    environment     env
}

task yarnLint(type: YarnTask, dependsOn: yarn) {
    inputs.files    yarn.outputs
    inputs.file     "${projectDir}/package.json"    // In case the NPM lint script changed
    inputs.file     "${projectDir}/tslint.json"
    inputs.dir      "${projectDir}/src"
    outputs.dir     "${buildDir}/lint"

    args =          ["run", "lint", "--silent"]

    doFirst {
        file("${buildDir}/lint").mkdirs()
    }
}

jar {
    from bundle
}

check.dependsOn yarnLint

idea {
    module {
        excludeDirs += file("node_modules")
    }
}
